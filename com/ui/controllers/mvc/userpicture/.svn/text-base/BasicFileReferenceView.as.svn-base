package net.interalia.etnia.ui.mvc.userpicture {

	import flash.display.InteractiveObject;
	import flash.display.SimpleButton;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;
	import flash.text.TextField;
	
	import net.interalia.etnia.ui.mvc.interfaces.IFormController;
	import net.interalia.etnia.ui.mvc.interfaces.IModel;
	import net.interalia.etnia.ui.mvc.userpicture.interfaces.IFileReferenceModel;
	import net.interalia.etnia.ui.mvc.views.BasicFormView;

	public class BasicFileReferenceView extends BasicFormView {

		protected var _selectBtn:SimpleButton;
		protected var _addBtn:SimpleButton;
		protected var _changeBtn:SimpleButton;
		protected var _fileTxf:TextField;

		protected function get formCtrl():IFormController {
			return _controller as IFormController;
		}

		protected function get fileReferenceModel():IFileReferenceModel {
			return _model as IFileReferenceModel;
		}

		protected function get fileTxf():TextField {
			return _fileTxf;
		}

		protected function get selectButton():InteractiveObject {
			return _selectBtn;
		}

		protected function get changeButton():InteractiveObject {
			return _changeBtn;
		}

		protected function get addButton():InteractiveObject {
			return _addBtn;
		}

		public function BasicFileReferenceView($model:IModel, $controller:IFormController, $graphic:Sprite = null) {
			super($model, $controller, $graphic);
		}

		override public function destructor():void {
			addSelectListeners(false);
			addElement(selectButton, false);
			addElement(changeButton, false);
			addElement(addButton, false);
			addElement(fileTxf, false);
			super.destructor();
		}

		override protected function initialize():void {
			addSelectListeners(false);
			super.initialize();
			setInitialState();
		}

		override protected function stateUpdate($event:Event):void {
			switch(_model.currentState) {
				case BasicFileReferenceStates.FILE_SELECTED:	setSelectedFileState(fileReferenceModel.filename);		break;
				case BasicFileReferenceStates.LOADING_FILE:		addSelectListeners();									break;
			}
			super.stateUpdate($event);
		}

		override protected function initGraphic():void {
			_selectBtn = getButton("Elige tu archivo", 200, 200);
			_changeBtn = getButton("Cambia", 200, 200, false);
			_addBtn = getButton("Agrega", 200, 230, false);
			_cancelButton = getButton("Cancela", 200, 260);
			_fileTxf = new TextField();
			_fileTxf.x = 100;
			_fileTxf.y = 200;
			addElement(_fileTxf);
		}

		protected function addSelectListeners($add:Boolean = true):void {
			addListener(selectButton, MouseEvent.CLICK, clickHandler, $add);
			addListener(changeButton, MouseEvent.CLICK, clickHandler, !$add);
			addListener(addButton, MouseEvent.CLICK, clickHandler, !$add);
		}

		protected function setInitialState():void {
			showSelectView();
		}

		protected function setSelectedFileState($filename:String = ""):void {
			if(fileTxf) {
				fileTxf.text = $filename;
			}
			showSelectView(false);
		}

		protected function setChangeFileState($filename:String):void {
			setSelectedFileState($filename);
		}

		protected function showSelectView($add:Boolean = true):void {
			addElement(selectButton, $add);
			addElement(changeButton, !$add);
			addElement(addButton, !$add);
		}

		override protected function getButtonID($button:InteractiveObject):String {
			switch($button) {
				case selectButton:		return BasicFileReferenceStates.SELECT;
				case changeButton:		return BasicFileReferenceStates.CHANGE;
				case addButton:			return BasicFileReferenceStates.ADD;
			}
			return super.getButtonID($button);
		}

	}
}